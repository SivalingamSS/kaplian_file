1.DML COMMANDS

Data Manipulation Language (DML) is a computer programming language that 
allows users to add value, delete, and modify data in a database.
    create table Student(Stu_id int,Stu_Name varchar(30),Stu_Marks int,Stu_Age int);
    =>select
        SELECT * FROM Student;
    =>insert
        INSERT INTO Student (Stu_id, Stu_Name, Stu_Marks, Stu_Age) VALUES (104, Anmol, 89, 19);
    =>update  
         UPDATE Product SET Stu_marks = 80 WHERE Product_Id = '102' ;  
    =>delete
         DELETE FROM Student WHERE Product_Id = 'P202' ;  


2.RELATIONAL(ONE TO ONE)

A one-to-one relationship is a link between the information in two tables, 
where each record in each table only appears once.
      
      CREATE TABLE Employees (EmployeeID INT PRIMARY KEY,Name VARCHAR(100),Age int);
      

      CREATE TABLE EmployeeDetails ( EmployeeID INT PRIMARY KEY,Address VARCHAR(255), Phone VARCHAR(15), Salary VARCHAR(255)FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID));


      SELECT:
        SELECT Employees.Name, EmployeeDetails.Address, EmployeeDetails.Phone
        FROM Employees
        JOIN EmployeeDetails ON Employees.EmployeeID = EmployeeDetails.EmployeeID
        WHERE Employees.EmployeeID = 123; 


3.STRING FUNCTION(https://www.geeksforgeeks.org/sql-string-functions/)

ASCII(): This function is used to find the ASCII value of a character.
Syntax: SELECT ascii('t');

CHAR_LENGTH(): This function is used to find the length of a word.
Syntax: SELECT char_length('Hello!');

FIND_IN_SET(): This function is used to find a symbol from a set of symbols.
Syntax: SELECT FIND_IN_SET('b', 'a, b, c, d, e, f');

LOWER(): This function is used to convert the upper case string into lower case.
Syntax: SELECT LOWER('GEEKSFORGEEKS.ORG');

LTRIM(): This function is used to cut the given sub string from the original string.
Syntax: LTRIM('123123geeks', '123');

MID(): This function is to find a word from the given position and of the given size.
Syntax: Mid ("geeksforgeeks", 6, 2);

REPEAT(): This function is used to write the given string again and again till the number of times mentioned.
Syntax: SELECT REPEAT('geeks', 2);

REVERSE(): This function is used to reverse a string.
Syntax: SELECT REVERSE('geeksforgeeks.org');

LPAD(): This function is used to make the given string of the given size by adding the given symbol.
Syntax: LPAD('geeks', 8, '0');

RIGHT(): This function is used to SELECT a sub string from the right end of the given size.
Syntax: SELECT RIGHT('geeksforgeeks.org', 4);

RTRIM(): This function is used to cut the given sub string from the original string.
Syntax: RTRIM('geeksxyxzyyy', 'xyz');

SPACE(): This function is used to write the given number of spaces.
Syntax: SELECT SPACE(7);

TRIM(): This function is used to cut the given symbol from the string.
Syntax: TRIM(LEADING '0' FROM '000123');

UCASE(): This function is used to make the string in upper case.
Syntax: UCASE ("GeeksForGeeks");



4.SUB QUERY

An SQL Subquery, is a SELECT query within another query. It is also known as Inner query or Nested query 
and the query containing it is the outer query.   

CreateCommand

CREATE TABLE CUSTOMERS ( ID INT NOT NULL,NAME VARCHAR(20) NOT NULL,AGE INT NOT NULL,ADDRESS CHAR (25),SALARY DECIMAL (18, 2),PRIMARY KEY (ID));  

CREATE TABLE CUSTOMERS_BKP ( ID INT NOT NULL,NAME VARCHAR(20) NOT NULL,AGE INT NOT NULL,ADDRESS CHAR (25),SALARY DECIMAL (18, 2),PRIMARY KEY (ID));  

InsertCommand

INSERT INTO CUSTOMERS VALUES 
(1, 'Ramesh', 32, 'Ahmedabad', 2000.00),
(2, 'Khilan', 25, 'Delhi', 1500.00),
(3, 'Kaushik', 23, 'Kota', 2000.00),
(4, 'Chaitali', 25, 'Mumbai', 6500.00),
(5, 'Hardik', 27, 'Bhopal', 8500.00),
(6, 'Komal', 22, 'Hyderabad', 4500.00),
(7, 'Muffy', 24, 'Indore', 10000.00);

Select and MultiValue Command

SELECT * FROM CUSTOMERS 
WHERE ID IN (SELECT ID FROM CUSTOMERS_BKP);

SELECT * FROM CUSTOMERS 
WHERE ID IN (SELECT ID FROM CUSTOMERS WHERE SALARY > 4500);

UpdateCommand

UPDATE CUSTOMERS 
SET SALARY = SALARY * 0.25 
WHERE AGE IN (SELECT AGE FROM CUSTOMERS_BKP WHERE AGE >= 27 );

DeleteCommand

DELETE FROM CUSTOMERS 
WHERE AGE IN (SELECT AGE FROM CUSTOMERS_BKP WHERE AGE >= 27 );

5.STORE PRODUCERE

create procedure DB_CREATE
@staffid int,
@staffname varchar(30),
@staffage int,
@staffcity varchar(40),
@staffmobnumber int,
@emailid varchar(30),
@address_id varchar(30)
AS
begin
set nocount on

insert into Client_DB(staff_name,staff_age,staff_city,staff_mob_number) values (@staffname,@staffage,@staffcity,@staffmobnumber);

end
go

EXEC Client_DB;

CREATE PROCEDURE DB_CREATE @staff_city varchar(40)
AS
SELECT * FROM Client_DB WHERE staff_city= @staff_city
GO;



6.USE MIDDLEWARE(https://www.tutorialsteacher.com/core/aspnet-core-middleware)

In C# web applications, middleware refers to components or modules that are part of the ASP.NET Core pipeline. This pipeline manages the HTTP request and response handling within an application. Middleware components are responsible for processing requests, executing logic, and generating responses as they flow through the pipeline.
ASP.NET Core middleware sits between the server and the application to perform various tasks such as authentication, routing, logging, error handling, and more. Each middleware component can intercept incoming requests, perform operations, and pass the request to the next middleware component in the pipeline.

Here are a few common middleware components used in ASP.NET Core web applications:

Authentication Middleware: Handles user authentication and authorization. It validates user credentials, sets authentication cookies, and manages access to protected resources.

Routing Middleware: Routes incoming requests to appropriate controllers and actions based on defined URL patterns.

Logging Middleware: Logs information about incoming requests, exceptions, or any custom messages for monitoring and debugging purposes.

Error Handling Middleware: Catches and processes exceptions that occur during request processing. It can generate error responses and handle exceptions gracefully.

Static Files Middleware: Serves static files like HTML, CSS, JavaScript, and images directly to clients without requiring server-side processing.

CORS (Cross-Origin Resource Sharing) Middleware: Controls access to resources from different origins by configuring CORS policies.

